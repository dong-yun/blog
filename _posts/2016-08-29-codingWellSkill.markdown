---

layout: post 
title: "코딩을 지탱하는 기술 1장" 
date: 2016-08-29 21:58:00 +0900 
categories: books 
tags: 
 - coding

---

![](http://bimage.interpark.com/goods_image/2/0/8/1/213202081g.jpg)

-	원리로 깨우치는 프로그래밍 기법
-	니시오 히로카즈 지음
-	BJPUBLIC

```
인터넷상의 방대한 자료를 어떻게 효과적으로 내 것으로 만들 수 있을까..에 대한 해결책을
제시하는 부분. 그러나, 읽고 나면 곧 잊게 되는 방법들.
```

이빨로 씹다
-----------

-	방대한 정보를 흡수 할 수 있는 3 가지 전략
-	필요한 부분부터 흡수한다
-	대략적인 부분을 잡아서 조금씩 상세화한다
-	끝에서부터 차례대로 베껴간다

필요한 부분부터 흡수한다
------------------------

-	전체를 모두 읽지 않은 것이 께름직한가? 하지만 좌절하고 전혀 읽지 않는 것보다는 낫다.
-	'전부 읽지 않으면' 이라는 완벽 주의가 배우로자 하는 동기를 짓누르고 있다면, 버려버리는 것이 낫다.
-	동기는 매우 중요하다.
-	이 전략을 사용하기 위해서는 일고 싶은 부분이 어디인지 대략적으로 전체적인 구조를 파악하고 있어야 한다.
-	만약 이게 어렵다면 '대략적인 부분을 잡아서 조금씩 상세화한다'를 시험해 보자

대략적인 부분을 잡아서 조금씩 상세화한다
----------------------------------------

-	책이나 문서에는 목차가 있다. 목차를 보면 전체 구조를 대략적으로 알 수 있다.
-	그러고 나서 본문을 속독으로 읽어나간다.
-	자세히 보지 않고 우선은 소제목이나 강조 부분, 그림과 그림 제목 등을 본다.
-	소스코드를 읽을 때는 우선 디렉토러 구조와 파일명을 본다.
-	그리고 파일을 속독으로 읽고 거기서 정의하고 있는 함수나 클래스 이름, 자주 호출되는 함수명 등을 본다.
-	이 방법으로 읽어도 정보가 한쪽 귀로 들어와서 한쪽 귀로 나가버리는 느낌을 받는 경우가 있다면
-	'끝에서부터 차례대로 베겨간다'를 시도해 보자

끝에서부터 차례대로 베겨간다
----------------------------

-	명확히 하고 싶은것, 조사하고 싶은 것이 없이 '대충' 읽으면 읽은 내용이 뇌를 그냥 스쳐 지나갈 뿐이다.
-	이런 상태에서 어떻게 배울까를 고민한 해도, 판단을 위한 지식 자체가 없기 때문에 무의미하다.
-	그래서 지식의 밑바탕을 만들기 위해서 교과서를 그대로 베껴쓴다.
-	이것이 '베끼기'라 불리는 기술이다.
-	지식이 없는 상태에서 고민하는 것은 무익하기 때문에
-	우선 아무것도 생각하지 않고 지식을 복사하는 것이다.
-	시간을 정해서 어디까지 베낄 수 있는 지 도전하는 것도 좋다.
-	분량을 나누는 것도 좋은 방법이다.
-	중요한 것은 간격을 적적히 해서 목표를 이루었다는 만족감을 얻을 수 있도록 하는 것이다.

`이 이상의 방법은 없다.`
